1.通过打开项目中.sln文件就可以加载整个project

2.使用QT模块（qt application和qt library）
一般模块是减少耦合，但是有一些模块需要用到另一些模块时，单纯用#include容易出现找不到路径的情况。所以需要对环境进行配置，配置如下：
///我这个库需要用到另外两个库，所以需要配置一下
//需要添加头文件包含绝对路径和相对路径（定义宏）//绝对路径在拷贝到别人的地方
//一.相对路径前面加$(SolutionDir)表示该项目，这个是在1配置属性里面的2常规里面的3输出目录，我们需要复制输出目录的这个$(SolutionDir)
//二.配置头文件1.c/c++ 2常规 3.附加包含目录 是相对目录头文件这是配置你需要使用到的模块名，如$(SolutionDir)\DataDriveLib
//三.然后是库文件,1链接器的2输入3.附加依赖项,配置你需要用到的模块.dll文件，可以手打DataDriveLib.lib
DataManageLib.lib
//四.链接库里的1链接器2.常规也需要配3.附加库目录，如果是模块则配$(SolutionDir)$(Platform)\$(Configuration)\，如果是主模块$(SolutionDir)$(Platform)\debug\

3.在使用qt变成时由于引入了qt的包或者文件，不对环境进行配置是不能成功#include qstring的，会爆红，所以进行如下配置：
.出现错误可能是属性没有配置好，分别配置每一个模块的属性：
首先在配置属性-》常规中配置以下（其中用的qt是自己qt的安装路径）
包含目录：C:\Qt\4.8.7\include;$(IncludePath)
引用目录：C:\Qt\4.8.7\lib;$(ReferencePath)
库目录：C:\Qt\4.8.7\bin;$(LibraryPath)

4.vs的编译，如果不想先执行的话，但是其他程序要引用他或者你想要看代码是否错误就可以点击生成-》生成xxxxx（注意生成当前项目而不是解决方案）：
这里要先简单介绍下VS的项目生成步骤。VS的项目生成大致分成四步：分析、编译、链接、生成。
一、分析 这个就是对代码的语法进行一次检查，主要是检查语法错误和一些提醒，这个结果可以在“错误列表”里面查看：
二、编译 没有语法错误后，VS先不管三七二十，把你项目里所有的cpp文件都调用编译器生成一个.obj文件（这里只有项目里面的.cpp.文件会生成obj文件，每一个cpp分别会生成对应的obj）。什么叫项目里的cpp文件
三、链接 没有特意查过，谈谈自己的理解：编译完了后，VS以main函数所在的obj为根节点进行搜索，在所有的obj中把和main的obj产生关联的编译结果进行一步步扩展。一方面这一步把没用的编译内容进行了删减，另一方面就是对外部变量和函数进行匹配。通常生成过程中的链接错误“LNK XXXX”就出现在这一步：
四、生成 这个就是把链接后的结果以生成文件的格式写到该格式的文件里面，也就是第一张图里的生成目录里的exe文件。


5.所谓的宏，可以在配置属性-》常规-》输出目录里面看到，就是对变量命名，如我们一般使用的$(SolutionDir)会被定义为C:\XXX\YYY\ZZZ（也就是你的项目地址）$(Configuration)是DeBug文件 $(Platform)是win32文件

6.由于networkvis是qt application则在生成编译后会生成.exe文件和其他模块是qt library会生成.lib文件，.exe文件就是我们最后的程序文件，可以当做应用使用

7.出现无法打开xxx.h no such file or dictionary
解决：配置c++ 常规附加包含目录加入这个文件的模块路径（可以相对可以绝对）