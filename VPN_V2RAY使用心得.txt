1.VPN的代理模式：众所周知，传统有一大弊端，即：只能使用全局模式，这样情况下，虽然可以加速国外网站，但打开国内网站速度会变慢；
加速度不但支持全局模式，同时也支持PAC模式（智能分流，绕过中国大陆），这样情况下，既可以加速国外网站，也不会影响国内网站打开速度!
PAC模式】：也就是智能分流模式，根据规则去匹配你访问的网站，仅加速国外网站，国内网站不受影响，非常智能；
优点：节省流量，国内网站依旧走本地网络，速度快，绝大部分国外网站都走代 理，速度也快。
缺点：少部分国外网站不走代 理，无法起到加速效果，甚至无法访问（解决方案：自己编辑PAC规则列表，将不走代 理的国外网址加入进去，或者直接选择全局模式）。

【全局模式】：国内、国外所有网站都走代 理。
优点：可访问全球所有网站。
缺点：所有网站都走代 理，访问国内网站速度变慢，且耗流量。

2.HTTP代理
类似于客户端《---》代理服务器《---》web应用服务器
1）对于web客户端来说，代理服务器扮演的是服务器的角色，接受客户端的请求报文，并返回响应报文
2）对于web应用服务器来说，代理扮演的是客户端的角色，发送web请求报文，接受web响应报文
3）最后代理会转发web应用服务器的响应给web客户端
总结：这种HTTP代理扮演的是「中间人」角色，对于连接到它的客户端来说，它是服务端；对于要连接的服务端来说，它是客户端。它就负责在两端之间来回传送 HTTP 报文。
扩展：TCP代理
第二种是 Tunneling TCP based protocols through Web proxy servers（通过 Web 代理服务器用隧道方式传输基于 TCP 的协议）描述的隧道代理。它通过 HTTP 协议正文部分（Body）完成通讯，以 HTTP 的方式实现任意基于 TCP 的应用层协议代理。这种代理使用 HTTP 的 CONNECT 方法建立连接，但 CONNECT 最开始并不是 RFC 2616 - HTTP/1.1 的一部分，直到 2014 年发布的 HTTP/1.1 修订版中，才增加了对 CONNECT 及隧道代理的描述，详见 RFC 7231 - HTTP/1.1: Semantics and Content。实际上这种代理早就被广泛实现。
假如我通过代理访问 A 网站，浏览器首先通过 CONNECT 请求，让代理创建一条到 A 网站的 TCP 连接；一旦 TCP 连接建好，代理无脑转发后续流量即可。所以这种代理，理论上适用于任意基于 TCP 的应用层协议，HTTPS 网站使用的 TLS 协议当然也可以。这也是这种代理为什么被称为隧道的原因。对于 HTTPS 来说，客户端透过代理直接跟服务端进行 TLS 握手协商密钥，所以依然是安全的，下图中的抓包信息显示了这种场景
总结：先打通隧道，之后就无脑转发
